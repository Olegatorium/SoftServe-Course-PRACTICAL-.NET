Within the class ReflectorAssembly you have to:

1) define three classes LargeBox, Box, and SmallBox. Each of them contains two static methods with string parameter size:

-  UnPackingBox() outputs in console ("I am unpacking {0} box.", size);

- InBox() - ("I am in {0} box.", size);

2) define two interfaces: 

- ILookingForBox with static method LookForBox() takes string parameter;

- IPackingBox with static method PackBox() takes a string parameter.

3) define the static  method WriteAssemblies() which contains the following logic:

- get calling assembly;

- get all types within the assembly;

- iterating through the collection of types;

- providing the output is it class, method, and name of the type;

- all methods of the class have to be invoked with the parameter according to the name of the class.

Note. You have to exclude classes Task and Reflector (with their methods) from the output.

The result of the method WriteAssemblies() invoking: